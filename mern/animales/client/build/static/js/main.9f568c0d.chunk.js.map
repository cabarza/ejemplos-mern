{"version":3,"sources":["components/animales/AnimalList.js","components/animales/AnimalForm.js","components/animales/AnimalManager.js","components/login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["AnimalList","props","history","useHistory","Col","to","icon","faPlus","style","float","faSignOutAlt","datos","map","animal","index","Button","color","margin","onClick","e","id","_id","push","faEye","faPen","Swal","fire","title","text","showCancelButton","then","result","value","axios","delete","resp","animales","filter","a","setDatos","catch","error","faTrash","patch","data","mensaje","setActualizar","actualizar","faPaw","tipo","nombre","tamanio","propietario","length","fecha","Date","toUTCString","initialState","AnimalForm","useParams","useState","inputs","setInputs","tipos","setTipos","actualizarFormulario","target","name","parseDate","console","log","fechaSplit","split","UTC","volver","useEffect","get","Container","Row","ver","modificar","Form","onSubmit","preventDefault","put","findIndex","splice","editar","post","concat","message","crear","xs","FormGroup","Label","for","Input","type","onChange","disabled","t","i","codigo","AnimalManager","useRouteMatch","path","url","exact","Login","email","password","required","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f568c0d.chunk.js","sourcesContent":["import { Link, Redirect, useHistory } from 'react-router-dom';\nimport {Button, Col} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faPen, faTrash, faPlus, faPaw, faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nfunction AnimalList(props) {\n\n    const history = useHistory();\n\n    const ver =(e, id) => {\n        history.push('/animales/ver/'+id);\n    }\n\n    const modificar =(e, id) => {\n        history.push('/animales/modificar/'+id);\n    }\n\n    const eliminar = (e, id) => {\n        Swal.fire({\n            title: 'Eliminar animal',\n            text: '¿Está seguro que desea eliminar el animal?',\n            icon: 'warning',\n            showCancelButton: true\n        }).then(result => {\n            if(result.value) {\n                axios.delete('/api/animales/'+id)\n                .then(resp => {\n                    const animales = props.datos.filter(a => a._id !== id);\n                    props.setDatos(animales); \n                }).catch(error => Swal.fire('Error al obtener los datos', 'Ha ocurrido un problema al intentar eliminar el animal', 'error'))\n            }\n        })\n    }\n\n    const adoptar = (e, id) => {\n        axios.patch('/api/animales/'+id, {})\n            .then(resp => {\n                if(resp.data.error) {\n                   Swal.fire('Error al adoptar', resp.data.mensaje, 'error');\n                } else {\n                    props.setActualizar(!props.actualizar);\n                }\n            });\n    }\n\n    return (\n        <Col>\n            <Link to=\"/animales/crear\">\n                <FontAwesomeIcon icon={faPlus}/>\n            </Link>\n            <Link to=\"/\" style={{float: 'right'}}>\n                <FontAwesomeIcon icon={faSignOutAlt}/>\n            </Link>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Acciones</th>\n                        <th>Tipo</th>\n                        <th>Nombre</th>\n                        <th>Color</th>\n                        <th>Tamaño</th>\n                        <th>Propietario</th>\n                        <th>Fecha Adopción</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.datos.map((animal, index) => <tr key={index}>\n                        <td>\n                            <Button color=\"primary\" style={{margin:'2px'}} onClick={e => ver(e, animal._id)}><FontAwesomeIcon icon={faEye}/></Button>\n                            <Button color=\"secondary\" style={{margin:'2px'}} onClick={e => modificar(e, animal._id)}><FontAwesomeIcon icon={faPen}/></Button>\n                            <Button color=\"danger\" style={{margin:'2px'}} onClick={e => eliminar(e, animal._id)}><FontAwesomeIcon icon={faTrash}/></Button>\n                            <Button color=\"success\" style={{margin:'2px'}} onClick={e => adoptar(e, animal._id)}><FontAwesomeIcon icon={faPaw}/></Button>\n                        </td>\n                        <td>{animal.tipo}</td>\n                        <td>{animal.nombre}</td>\n                        <td>{animal.color}</td>\n                        <td>{animal.tamanio}</td>\n                        <td>{animal.propietario.length>0?animal.propietario[0].nombre:''}</td>\n                        <td>{animal.fecha?new Date(animal.fecha).toUTCString():''}</td>\n                    </tr>)}\n                </tbody>\n            </table>\n        </Col>\n    )\n}\n\nexport default AnimalList;","import { Redirect, useHistory, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport {Row, Col, Form, FormGroup, Container, Label, Input, Button} from 'reactstrap';\nimport Swal from 'sweetalert2';\n\n\nconst initialState =  {\n    nombre: '',\n    tipo: '',\n    color: '',\n    tamanio: '',\n    fecha: new Date()\n}\n\nconst AnimalForm = props => {\n\n    const history = useHistory();\n    let { id } = useParams();\n    const [inputs, setInputs] = useState(initialState);\n    const [tipos, setTipos] = useState([]);\n\n    \n\n\n    const actualizarFormulario = (e) => {\n        const {name, value} = e.target;\n        setInputs({\n            ...inputs, \n            [name]: value\n        });\n    }\n\n    const parseDate = (fecha) => {\n        console.log(fecha);\n        if(fecha) {\n            const fechaSplit = fecha.split(\"-\");\n            return new Date(Date.UTC(fechaSplit[0], fechaSplit[1]-1, fechaSplit[2]));\n        }\n    }\n\n    const crear = (e) => {\n        inputs.fecha = parseDate(inputs.fecha);\n        axios.post('/api/animales', inputs)\n            .then(resp => {\n                if(resp.data && resp.data.data){\n                    volver(e)\n                    props.setDatos(props.datos.concat([resp.data.data]));\n                } else {\n                    Swal.fire('Error de validación', resp.data.error.message, 'error')\n                }\n            })\n            .catch(error => Swal.fire('Error al obtener los datos', 'Ha ocurrido un problema al intentar crear el animal', 'error'))\n    }\n\n    const editar = (e) => {\n        inputs.fecha = parseDate(inputs.fecha);\n        axios.put('/api/animales/'+id, inputs)\n        .then(resp => {\n            const index = props.datos.findIndex(a => a._id === id);\n            console.log('Index', index);\n            props.datos.splice(index, 1, inputs);\n            props.setDatos(props.datos);   \n            volver(e)\n        })\n        .catch(error => Swal.fire('Error al obtener los datos', 'Ha ocurrido un problema al intentar editar el animal', 'error'))\n    }\n\n    const guardar = (e) => {\n        e.preventDefault();\n        if(id) {\n            editar();\n        } else {\n            crear();\n        }\n    }\n\n    const volver = (e) => {\n        history.push('/animales');\n        // return <Redirect to=\"/\" />\n    }\n\n    useEffect(() => {\n        axios.get('/api/tipos_animales')\n            .then(resp => setTipos(resp.data.data))\n            .catch(error => Swal.fire('Error al obtener los datos', 'Ha ocurrido un problema al intentar obtener el listado tipo de animales', 'error'))\n        if(id) {\n            axios.get('/api/animales/'+id)\n            .then(resp => setInputs(resp.data.data))\n            .catch(error => Swal.fire('Error al obtener los datos', 'Ha ocurrido un problema al intentar obtener el animal con id ' + props.id, 'error'))\n            \n        }\n    }, []);\n\n    return (\n        <Container>\n            <Row>\n                <h1>{ props.ver? `Ver ${inputs.nombre}`: props.modificar?`Editar ${inputs.nombre}`: 'Nuevo animal'}</h1>\n            </Row>\n            <Form onSubmit={guardar}>\n                <Row>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"tipo\">Tipo</Label>\n                            <Input type=\"select\" name=\"tipo\" value={inputs.tipo} onChange={actualizarFormulario} disabled={props.ver}>\n                                <option>Seleccione</option>\n                                { tipos && tipos.map((t, i) => <option key={i} value={t.codigo}>\n                                        {t.nombre}\n                                    </option> \n                                )}\n                            </Input>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"nombre\">Nombre</Label>\n                            <Input type=\"text\" name=\"nombre\" value={inputs.nombre} onChange={actualizarFormulario} disabled={props.ver}/>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"color\">Color</Label>\n                            <Input type=\"color\" name=\"color\" value={inputs.color} onChange={actualizarFormulario} disabled={props.ver}/>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"tamanio\">Tamaño</Label>\n                            <Input type=\"select\" name=\"tamanio\" value={inputs.tamanio} onChange={actualizarFormulario} disabled={props.ver}>\n                                <option>Seleccione</option>\n                                <option value=\"Pequeño\">Pequeño</option>\n                                <option value=\"Mediano\">Mediano</option>\n                                <option value=\"Grande\">Grande</option>\n                            </Input>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"tamanio\">Fecha</Label>\n                            <Input type=\"date\" name=\"fecha\" value={inputs.fecha} onChange={actualizarFormulario} disabled={props.ver}/>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        {props.crear && <Button type=\"submit\">Crear</Button>}\n                        {props.modificar && <Button type=\"submit\">Modificar</Button>}\n                        <Button type=\"button\" onClick={volver}>Cerrar</Button>\n                    </Col>\n                </Row>\n            </Form>\n        </Container>\n    );\n}\n\nexport default AnimalForm;","import React, {useState, useEffect} from 'react';\nimport AnimalList from \"./AnimalList\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport {Row} from 'reactstrap';\nimport AnimalForm from './AnimalForm';\nimport {BrowserRouter as Router, Route, Switch, useHistory, useRouteMatch} from 'react-router-dom';\n\nconst AnimalManager = props => {\n    let { path, url } = useRouteMatch();\n    \n    const [datos, setDatos] = useState([]);\n    const [actualizar, setActualizar] = useState(false);\n\n    useEffect(() =>{\n        axios.get('/api/animales')\n            .then(resp => setDatos(resp.data.data))\n            .catch(error => Swal.fire('Error al obtener los datos', 'Ha ocurrido un problema al intentar obtener el listado de animales', 'error'))\n    }, [actualizar]);\n\n    return (\n        <Row>\n            <Router>\n                <Switch>\n                    <Route exact path={path}>\n                        <AnimalList datos={datos} setDatos={setDatos} actualizar={actualizar} setActualizar={setActualizar}/>\n                    </Route>\n                    <Route path={`${path}/crear`}>\n                        <AnimalForm crear={true} datos={datos} setDatos={setDatos}/>\n                    </Route>\n                    <Route path={`${path}/modificar/:id`}>\n                        <AnimalForm modificar={true} datos={datos} setDatos={setDatos}/>\n                    </Route>\n                    <Route path={`${path}/ver/:id`}>\n                        <AnimalForm  ver={true}/>\n                    </Route>\n                </Switch>\n            </Router>\n        </Row>\n    );\n}\n\nexport default AnimalManager;","import axios from 'axios';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {Button, Col, Container, Form, FormGroup, Input, Label, Row} from 'reactstrap';\nimport Swal from 'sweetalert2';\n\nconst Login = () => {\n    const history = useHistory();\n    const [inputs, setInputs] = useState({email: '', password: ''});    \n\n    const actualizarFormulario = (e) => {\n        const {name, value} = e.target;\n        setInputs({\n            ...inputs, \n            [name]: value\n        });\n    }\n    \n    const login = (e) => {\n        e.preventDefault();\n        axios.post('/login', inputs)\n            .then(resp => {\n                if(resp.data && !resp.data.error) {\n                    history.push('/animales')\n                } else {\n                    Swal.fire('Error', resp.data.mensaje, 'error');\n                }\n            })\n    }\n    \n    return (\n        <Container>\n            <Row>\n                <h1>Login</h1>\n            </Row>\n            <Form onSubmit={login}>\n                <Row>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input type=\"text\" name=\"email\" value={inputs.email} onChange={actualizarFormulario} required/>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"password\">Password</Label>\n                            <Input type=\"password\" name=\"password\" value={inputs.password} onChange={actualizarFormulario} required/>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <Button type=\"submit\">Ingresar</Button>\n                    </Col>\n                </Row>\n            </Form>\n        </Container>\n    );\n}\n\nexport default Login;","import AnimalManager from './components/animales/AnimalManager';\nimport Login from './components/login/Login'\nimport {BrowserRouter as Router, Route, Switch, useHistory} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Login />\n            </Route>\n            <Route path=\"/animales\">\n              <AnimalManager />\n            </Route>\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}